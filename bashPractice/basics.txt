//
echo "HELLO"

//
for i in {1..100..2}
do
    echo "$i"
done

//
read name
echo "Welcome ${name}"

//
for i in {1..50}
do
echo "$i"
done

//
read x
read y
echo $((x+y))
echo $((x-y))
echo $((x*y))
echo $((x/y))

//
read x
read y
if [ $x -gt $y ]
then echo "X is greater than Y"
elif [ $x -lt $y ]
then echo "X is less than Y"
else
echo "X is equal to Y"
fi

//
read i
if [ "$i" == "y" ]||[ "$i" == "Y" ]; then
echo "YES"
else
echo "NO"
fi

//
read num
reslt=$(bc -l <(echo $num))
printf "%.3f" $reslt


//
grep -iw "the\|that\|then\|those"


//
grep '\(\d\) \?\1'
#The regexp (\d) *\1 works perfectly.
Match one digit \d and put it in a capturing group (), then 0 to any number * of spaces , then something that is the same than the first capturing group \1

//
sed 's/[Tt]hy/{&}/g'
&[ambersand] will hold the old string value and g is for globally


//
grep -w 'the'
grep -i " the "

//
grep -ivw 'that'

//
#!/bin/bash
awk '{if (NF!=4) print "Not all scores are available for " $1}'

//

#!/bin/bash
awk '{ if ($2 >= 50 && $3 >= 50 && $4 >= 50) print $1 " : Pass"; else print $1 " : Fail" }'
Sample Input

A 25 27 50
B 35 37 75
C 75 78 80
D 99 88 76
Sample Output

A : Fail
B : Fail
C : Pass
D : Pass
Explanation

Only student C and student D have scored >=50 in all three subjects.


//
awk '
{   printf "%s : ", $0
    sum = 0
    for(i=2;i<=NF;i++){
        sum += $i
    }
    avg=sum/(NF-1)
    if(avg>=80){
        printf "A\n"
    }
    else if(avg >=60 && avg <80){
        printf "B\n"
    }
    else if(avg>=50 && avg<60){
        printf "C\n"
    }
    else {
        printf "FAIL\n"
    }
}'

Sample Input

A 25 27 50
B 35 37 75
C 75 78 80
D 99 88 76
Sample Output

A 25 27 50 : FAIL
B 35 37 75 : FAIL
C 75 78 80 : B
D 99 88 76 : A
Explanation

A scored an average less than 50 => FAIL Same for B C scored an average between 60 and 80 => B
D scored an average between 80 and 90 => A

//
#!/bin/bash
awk '
    BEGIN {count=0}
    
    {
        printf "%s %d %d %d", $1, $2, $3, $4
        count++;
        if (count%2 == 0)
            printf "\n"  
        else
            printf ";"
    }
'

A 25 27 50
B 35 37 75
C 75 78 80
D 99 88 76 
Sample Output

A 25 27 50;B 35 37 75
C 75 78 80;D 99 88 76 
Explanation

Every pair of lines have been concatenated with a semi-colon.
